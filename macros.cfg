
#####################################################################
#   Macros
#####################################################################

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro autobelts]
gcode:
    M84
    G28
    QUAD_GANTRY_LEVEL
    G28 Z
    BELTS_SHAPER_CALIBRATION



[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F1800                 ; retract filament
       
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X10 Y350 F12000
    #G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    #M109 S110
    #clean_nozzle

    TURN_OFF_HEATERS
    BED_MESH_CLEAR
    SET_FAN_SPEED FAN=Nevermore SPEED=0
    SET_FAN_SPEED FAN=Bed_Fans SPEED=0
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    STATUS_LEVELING
    G90
    QUAD_GANTRY_LEVEL
    G28 Z
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[gcode_macro load_filament]
gcode:
  M83
    G0 z20
    G0 X50 Y357 F12000
    G1 E50 F500
    G1 E -15 F500

[gcode_macro unload_filament]
gcode:
  M83
  G1 E-100 F300


[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2 + 22} Z5  


[gcode_macro CLEAN_NOZZLE]
variable_start_x: 87
variable_start_y: 357
variable_start_z: 2
variable_wipe_dist: 30
variable_wipe_qty: 1
variable_wipe_qty_fast: 30
variable_wipe_spd: 1000
variable_wipe_spd_fast: 1000
variable_raise_distance: 15

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position

    G1 Z10 F1500
    G1 X{start_x} Y{start_y} F6000
    G1 Z{start_z} F1500
 
## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}


## Wipe nozzle fast
 {% for wipes_fast in range(1, (wipe_qty_fast + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd_fast * 60}
   G1 X{start_x} F{wipe_spd_fast * 60}
 {% endfor %}


 ## Raise nozzle
 G1 Z{raise_distance}
# G1 Y{start_y -5} 

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: QUAD_GANTRY_LEVEL_BASE
gcode:
    QUAD_GANTRY_LEVEL_BASE horizontal_move_z=10 retry_tolerance=1.000
    QUAD_GANTRY_LEVEL_BASE horizontal_move_z=2
    g28 Z



[gcode_macro AXES_SHAPER_CALIBRATION]
description: Run standard input shaper test for all axes
gcode:
    {% set verbose = params.VERBOSE|default(true) %}
    {% set min_freq = params.FREQ_START|default(5)|float %}
    {% set max_freq = params.FREQ_END|default(133.3)|float %}
    {% set hz_per_sec = params.HZ_PER_SEC|default(1)|float %}

    TEST_RESONANCES AXIS=X FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400
    TEST_RESONANCES AXIS=Y FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER


[gcode_macro BELTS_SHAPER_CALIBRATION]
description: Run custom demi-axe test to analyze belts on CoreXY printers
gcode:
    {% set verbose = params.VERBOSE|default(true) %}
    {% set min_freq = params.FREQ_START|default(5)|float %}
    {% set max_freq = params.FREQ_END|default(133.33)|float %}
    {% set hz_per_sec = params.HZ_PER_SEC|default(1)|float %}

    TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400
    TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a FREQ_START={min_freq} FREQ_END={max_freq} HZ_PER_SEC={hz_per_sec}
    M400

    {% if verbose %}
        RESPOND MSG="Graphs generation... Please wait a minute or two and look in the configured folder."
    {% endif %}
    RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELTS


[gcode_macro EXCITATE_AXIS_AT_FREQ]
description: Maintain a specified input shaper excitating frequency for some time to diagnose vibrations
gcode:
    {% set FREQUENCY = params.FREQUENCY|default(25)|int %}
    {% set TIME = params.TIME|default(10)|int %}
    {% set AXIS = params.AXIS|default("x")|string|lower %}

    TEST_RESONANCES OUTPUT=raw_data AXIS={AXIS} FREQ_START={FREQUENCY-1} FREQ_END={FREQUENCY+1} HZ_PER_SEC={1/(TIME/3)}
    M400

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method(
    "set_device_power", device="POWER", state="off"
  )}


[gcode_macro zidlers]
gcode:

    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 
    G1 Z300 F3000
    G1 Z10 F3000 


[gcode_shell_command plot_graph]
command: bash /home/pi/printer_data/config/scripts/plot_graphs.sh
timeout: 500.0
verbose: True

[gcode_shell_command backup_cfg]
command: /usr/bin/bash /home/pi/printer_data/config/autocommit.sh
timeout: 30
verbose: True
   

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 40   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 350   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 20.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:




    

#[gcode_macro PRINT_START_old]        
#gcode:
#  #  BEACON_MODEL_SELECT NAME=TEXTURED
#    SET_PIN PIN=Daylight VALUE=1.0
#    SET_FAN_SPEED FAN=Nevermore SPEED=0.75
#    SET_FAN_SPEED FAN=Bed_Fans SPEED=0.75
#    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
#    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}
#    {% set chambertemp = params.CHAMBER|default(0)|int %}
#    STATUS_HEATING
#    M190 S{BED_TEMP}
#    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM=40
#    G28
#    PARK
#    STATUS_HEATING
#    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={chambertemp}
#    QUAD_GANTRY_LEVEL
#    G28 Z
#    G90
#    G0 X330 Y350 F12000
#    M109 S{EXTRUDER_TEMP}
#    STATUS_CLEANING
#    clean_nozzle
#    PARK
#    TEMPERATURE_WAIT SENSOR="temperature_sensor beacon_coil" MINIMUM=70
#    G28 z
#    STATUS_MESHING
#    bed_mesh_calibrate
 #   #BED_MESH_PROFILE LOAD=test-noplate
 #   BED_MESH_PROFILE LOAD=default
 #   clean_nozzle

 #   STATUS_PRINTING
 #   voron_purge